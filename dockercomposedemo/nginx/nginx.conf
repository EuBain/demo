user nginx;
worker_processes 1;

events {
  worker_connections 512;
}

http {
  log_format main  '$remote_addr - $remote_user[$time_local] "$http_user_agent" "$http_x_forwarded_for" "$upstream_addr"'; #自定义log格式
  access_log /etc/nginx/access.log main; # 输出log
  upstream local_server { # 设置server集群,负载均衡关键指令
    server web1:3001 weight=1; # 设置具体server,由于我们运行5个web app容器,所以定义5个,这个具体可以按需来进行增减. 
    server web2:3002 weight=1; # 设置具体server,由于我们运行5个web app容器,所以定义5个,这个具体可以按需来进行增减.  
    server web1:3003 weight=1; # 设置具体server,由于我们运行5个web app容器,所以定义5个,这个具体可以按需来进行增减.  
  }
  
  server {
    listen 2000; # 设置监听端口
    location / {
      proxy_pass http://local_server/; # 转向local_server_server
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
    }
  }
  server {
    listen 3001; # 设置监听端口
    location / {
      proxy_pass http://web1:3001/; # 转向local_server_server
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
    }
  }
  server {
    listen 3002; # 设置监听端口
    location / {
      proxy_pass http://web2:3002/; # 转向local_server_server
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
    }
  }
  server {
    listen 3003; # 设置监听端口
    location / {
      proxy_pass http://web1:3003/; # 转向local_server_server
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
    }
  }
}